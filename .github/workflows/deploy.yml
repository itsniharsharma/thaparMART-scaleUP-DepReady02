name: Deploy Thapar Marketplace

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build backend image
      run: |
        cd backend
        docker build -t thapar-backend:test .
    
    - name: Build frontend image
      run: |
        cd frontend
        docker build -t thapar-frontend:test .
    
    - name: Test backend container
      run: |
        docker run -d --name test-backend -p 8001:8001 \
          -e MONGO_URL="mongodb://test:test@localhost:27017/test" \
          -e DB_NAME="test" \
          -e AWS_ACCESS_KEY_ID="test" \
          -e AWS_SECRET_ACCESS_KEY="test" \
          -e AWS_REGION="ap-south-1" \
          -e S3_BUCKET_NAME="test" \
          -e RAZORPAY_KEY_ID="test" \
          -e RAZORPAY_KEY_SECRET="test" \
          thapar-backend:test
        sleep 10
        # Basic health check
        docker logs test-backend

  deploy-to-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push backend
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/thapar-backend:latest
    
    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/thapar-frontend:latest
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd ${{ secrets.PROJECT_PATH }}
          git pull origin main
          docker-compose -f docker-compose.prod.yml pull
          docker-compose -f docker-compose.prod.yml up -d
          
          # Health check
          sleep 30
          if docker-compose -f docker-compose.prod.yml ps | grep -q "Up"; then
            echo "‚úÖ Deployment successful!"
          else
            echo "‚ùå Deployment failed!"
            docker-compose -f docker-compose.prod.yml logs
            exit 1
          fi
    
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "üéâ Deployment completed successfully!"
        else
          echo "‚ùå Deployment failed!"
        fi